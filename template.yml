AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Description: >
  GitHub Alert Notifier

Resources:
  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Join ["-", [ghas-notifier, !Ref AWS::StackName]]

  GitHubWebhookSecretValidator:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: functions/authorizers/githubWebhookSecretValidator
      Description: "A Lambda that validates a GitHub Secret"
      Environment:
        Variables:
          NODE_ENV: Production
          REGION: !Ref "AWS::Region"
          EVENT_BUS_NAME: !Ref EventBus
      Events:
        GatewayEndpoint:
          Properties:
            ApiId: !Ref HttpApi
            Method: POST
            Path: /github/webhook/validate
          Type: HttpApi
      Handler: lib/main.handler
      Policies:
        - AmazonSSMReadOnlyAccess
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref EventBus
      Runtime: nodejs18.x
      Timeout: 60
      Tracing: Active

  GitHubWebhookIPValidator:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: functions/authorizers/githubWebhookIPValidator
      Description: "A Lambda Function that validates the IP comes from GitHub"
      Environment:
        Variables:
          NODE_ENV: Production
          REGION: !Ref "AWS::Region"
      Handler: lib/main.handler
      Policies:
        - AmazonSSMReadOnlyAccess
      Runtime: nodejs18.x
      Timeout: 60
      Tracing: Active

  ExampleFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: functions/core/exampleFunction
      Description: "An example Lambda Function"
      Environment:
        Variables:
          NODE_ENV: Production
          REGION: !Ref "AWS::Region"
      Handler: lib/main.handler
      Policies:
        - AmazonSSMReadOnlyAccess
      Runtime: nodejs18.x
      Timeout: 60
      Tracing: Active

  LambdaInvokeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - "sts:AssumeRole"

  LambdaInvokePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "LambdaInvokePolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "lambda:InvokeFunction"
            Resource: !GetAtt GitHubWebhookIPValidator.Arn
      Roles:
        - Ref: "LambdaInvokeRole"

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      FailOnWarnings: True
      RouteSettings:
        "POST /github/webhook/validate":
          ThrottlingBurstLimit: 10
      Auth:
        Authorizers:
          LambdaAuthorizer:
            AuthorizerPayloadFormatVersion: "2.0"
            EnableSimpleResponses: true
            FunctionArn: !GetAtt GitHubWebhookIPValidator.Arn
            FunctionInvokeRole: !GetAtt LambdaInvokeRole.Arn
        DefaultAuthorizer: LambdaAuthorizer

  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: stepfunctions/definition.yml
      DefinitionSubstitutions:
        ExampleFunction: !GetAtt ExampleFunction.Arn
      Type: EXPRESS
      Events:
        EBRule:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref EventBus
            RetryPolicy:
              MaximumRetryAttempts: 2
            DeadLetterConfig:
              Type: SQS
              QueueLogicalId: DeadLetterQueue
            Pattern:
              source:
                - custom.kickOffStateMachine
              detail-type:
                - transaction
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref ExampleFunction
        - CloudWatchLogsFullAccess
